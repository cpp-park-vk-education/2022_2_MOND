name: Tests

on:
  push:
    branches: [ "main", 'dev/**' ]

env:
  BUILD_TYPE: Release

jobs:
  cppcheck:
    runs-on: ubuntu-latest
    container: morapresence/mond_db_tests

    steps:
      - uses: actions/checkout@v3
      - name: run_cppcheck
        run: bash scripts/linters/linters.sh --cppcheck

      - name: run_cppcheck
        run: bash scripts/linters/linters.sh --cppcheck

  cpplint:
    runs-on: ubuntu-latest
    container: morapresence/mond_db_tests

    steps:
      - uses: actions/checkout@v3
      - name: run_cpplint
        run: bash scripts/linters/linters.sh --cpplint

      - name: run_cpplint
        run: bash scripts/linters/linters.sh --cpplint

  build-project:
    needs: [ cpplint,  cppcheck ]

    runs-on: ubuntu-latest
    container: morapresence/mond_db_debug

    steps:
      - uses: actions/checkout@v3

      - name: Configure CMake
        run: cmake -B ${{ github.workflow }}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{ github.workflow }}/build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: ${{ github.workflow }}/build/**/*

  build-project-for-valgrind:
    needs: [ cpplint,  cppcheck ]

    runs-on: ubuntu-latest
    container: morapresence/mond_db_debug

    steps:
      - uses: actions/checkout@v3

      - name: Configure CMake
        run: cmake -B ${{ github.workflow }}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}  -DADDRESS_SANITIZER_BUILD=False -DLEAK_SANITIZER_BUILD=False -DUNDEFINED_BEHAVIOUR_SANITIZER_BUILD=False -DTHREAD_SANITIZER_BUILD=False

      - name: Build
        run: cmake --build ${{ github.workflow }}/build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-for-valgrind-artifact
          path: ${{ github.workflow }}/build/**/*

  tests:
    needs: [ build-project ]

    runs-on: ubuntu-latest
    container: morapresence/mond_db_debug

    steps:
      - uses: actions/checkout@v3
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: ${{ github.workflow }}/build

      - name: Move to workspace
        run: |
          mkdir -p ${{ github.workspace }}/build
          mv ${{ github.workflow }}/build/* ${{ github.workspace }}/build   

      - name: Test_ConnectionHandler
        run: |
          cd ${{ github.workspace }}/build/Tests/ConnectionHandler/
          chmod 777 CONNECTION_HANDLER_TESTS
          ./CONNECTION_HANDLER_TESTS  

      - name: Coverage
        run: |
          cp -r ${{ github.workflow }}/build/* ${{ github.workspace }}/build
          cd ${{ github.workspace }}/build/
          lcov -t . -o coverage_report.info -c -d .
          genhtml -o coverage_report coverage_report.info          
  

  valgrind:
    needs: [ build-project-for-valgrind ]

    runs-on: ubuntu-latest
    container: morapresence/mond_db_debug

    steps:
      - uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-for-valgrind-artifact
          path: ${{ github.workflow }}/build

      - name: Move to workspace
        run: |
          mkdir -p ${{ github.workspace }}/build
          mv ${{ github.workflow }}/build/* ${{ github.workspace }}/build  

      - name: valgrind_ConnectionHandler
        run: |
          chmod 777 ${{github.workspace}}/build/Tests/ConnectionHandler/CONNECTION_HANDLER_TESTS
          valgrind --tool=memcheck --leak-check=yes ${{github.workspace}}/build/Tests/ConnectionHandler/CONNECTION_HANDLER_TESTS